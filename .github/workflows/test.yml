# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - "README.md"
  push:
    paths-ignore:
      - "README.md"

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: "go.mod"
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@a4f60bb28d35aeee14e6880718e0c85ff1882e64 # v6.0.1
        with:
          version: latest
      - uses: ko-build/setup-ko@d982fec422852203cfb2053a8ec6ad302280d04d # v0.8
        env:
          KO_DOCKER_REPO: "ttl.sh/imagetest" # Avoid using GH registry for presubmit and plumbing auth
      - id: entrypoint-build
        run: |
          ref=$(ko build --base-import-paths ./cmd/entrypoint)
          echo "entrypoint_ref=${ref}" >> $GITHUB_OUTPUT
    outputs:
      entrypoint_ref: ${{ steps.entrypoint-build.outputs.entrypoint_ref }}

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: "go.mod"
          cache: true
      - uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1
        with:
          terraform_version: "1.8.*"
          terraform_wrapper: false
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - "1.8.*"
          - "1.9.*"
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: "go.mod"
          cache: true
      - uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          TF_LOG: "info"
          IMAGETEST_ENTRYPOINT_REF: ${{ needs.build.outputs.entrypoint_ref }}
        run: go test -v -cover ./internal/provider/
        timeout-minutes: 10

  images-test:
    name: Run imagetest against images
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        # Pick small, reliable image tests that hit the various harnesses. Run
        # these in shards because we're using undersized runners compared to
        # upstream and will easily hit disk pressure.
        images:
          - calico
          - cilium
          - jre
          - maven
          - tomcat
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: "go.mod"
          cache: true
      - uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1
        with:
          terraform_version: "1.8.*"
          terraform_wrapper: false

      - name: Build the provider
        run: |
          go install .

      - name: Clone the public images repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: chainguard-images/images
          path: images

      - name: Build images
        working-directory: images
        env:
          TF_VAR_target_repository: "ttl.sh/imagetest"
          IMAGETEST_ENTRYPOINT_REF: ${{ needs.build.outputs.entrypoint_ref }}
        run: |
          make init-upgrade

          # Use the local provider
          cat <<EOF > $HOME/.terraformrc
          provider_installation {
            dev_overrides {
              "registry.terraform.io/chainguard-dev/imagetest" = "$HOME/go/bin/"
            }
          }
          direct {}
          EOF

          cat <<EOF > main_override.tf
          provider "imagetest" { repo = var.target_repository }
          EOF

          terraform apply -target='module.${{ matrix.images }}' -auto-approve --parallelism=$(nproc)
